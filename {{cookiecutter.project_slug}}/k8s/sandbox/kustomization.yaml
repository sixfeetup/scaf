apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: {{ cookiecutter.project_slug }}-sandbox

resources:
  - ../base
  - certificate.yaml
  - ingress-route.yaml
  - postgres.cnpg.yaml
  - secrets.yaml

patches:
- patch: |-
    - op: replace
      path: /spec/template/spec/containers/0/command
      value: ["daphne"]
    - op: replace
      path: /spec/template/spec/containers/0/args
      value: ["--bind", "0.0.0.0", "--port", "8000", "--ping-interval", "15", "--ping-timeout", "5", "config.asgi:application"]
    - op: add
      path: /spec/template/spec/imagePullSecrets
      value: 
        - name: regcred
    - op: add
      path: /spec/template/spec/initContainers/0/env
      value:
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              name: postgres-app
              key: host
    - op: replace
      path: /spec/template/spec/initContainers/0/command
      value: ["sh", "-c", "until pg_isready -h $(POSTGRES_HOST); do echo waiting for postgres; sleep 2; done;"]
    - op: add
      path: /spec/template/spec/initContainers/1/env
      value:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: postgres-app
              key: uri
    - op: add
      path: /spec/template/spec/containers/0/env
      value:
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              name: postgres-app
              key: host
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: postgres-app
              key: uri
  target:
    kind: Deployment
    name: backend
{% if cookiecutter.create_nextjs_frontend == "y" %}
- patch: |-
    - op: add
      path: /spec/template/spec/imagePullSecrets
      value: 
        - name: regcred
  target:
    kind: Deployment
    name: frontend{% endif %}

configMapGenerator:
  - name: app-config
    behavior: merge
    literals:
     - ENVIRONMENT="sandbox"
     - DJANGO_SETTINGS_MODULE="config.settings.production"
     - DJANGO_CSRF_TRUSTED_ORIGINS="https://sandbox.{{ cookiecutter.domain_name }}"
     - AWS_S3_CUSTOM_DOMAIN="sandbox.{{ cookiecutter.domain_name }}"

images:
  - name: backend
    newName: {{ cookiecutter.aws_account_id }}.dkr.ecr.{{ cookiecutter.aws_region }}.amazonaws.com/{{ cookiecutter.project_dash }}-sandbox-backend
    newTag: latest
{% if cookiecutter.create_nextjs_frontend == "y" %}
  - name: frontend
    newName: {{ cookiecutter.aws_account_id }}.dkr.ecr.{{ cookiecutter.aws_region }}.amazonaws.com/{{ cookiecutter.project_dash }}-sandbox-frontend
    newTag: latest{% endif %}
