apiVersion: v1
kind: Service
metadata:
  name: django
  labels:
    app: django
    tier: backend
spec:
  type: NodePort
  selector:
    app: django
    tier: backend
  ports:
    - port: 8000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
  labels:
    app: django
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django
      tier: backend
  template:
    metadata:
      labels:
        app: django
        tier: backend
    spec:
      containers:
        - name: django
          image: {{ cookiecutter.project_slug }}_local_django:latest
          command: ["python", "manage.py", "runserver"]
          ports:
            - name: http-server
              containerPort: 8000
          envFrom:
            - configMapRef:
                name: django-config
      initContainers:
        - name: check-db-ready
          image: postgres:12.7
          command: [
              "sh",
              "-c",
              "until pg_isready -h postgres -p 5432;
              do echo waiting for postgres; sleep 2; done;",
            ]
        - name: django-migration
          image: {{ cookiecutter.project_slug }}_local_django:latest
          command: ["python", "manage.py", "migrate"]
          envFrom:
            - configMapRef:
                name: django-config
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-backend
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: django
                port:
                  number: 8000
