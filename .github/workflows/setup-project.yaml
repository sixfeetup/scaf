name: Create scaf project

on: [push]

jobs:
  setup:
    environment: dev
    runs-on: ubuntu-latest

    steps:
    - name: Install Requirements
      shell: bash
      run: |
        sudo apt-get update && sudo apt-get install --only-upgrade curl
        sudo apt-get update && sudo apt-get install --only-upgrade make
        sudo apt-get update && sudo apt-get install --only-upgrade python3       
        INSTALL_URL="https://raw.githubusercontent.com/sixfeetup/scaf/$GITHUB_REF_NAME/install.sh"
        export SCAF_SCRIPT_BRANCH=$GITHUB_REF_NAME
        git config --global init.defaultBranch dev
        git config --global user.email "setup-project--install@example.com"
        git config --global user.name "CI CD install deps"
        echo "Downloading install script from $INSTALL_URL"
        rm -f $HOME/.local/bin/scaf
        echo "Installing scaf from $INSTALL_URL"
        curl -sSL $INSTALL_URL | DEBUG=True bash

    - name: Create Project with Scaf
      shell: bash
      run: |
        git config --global init.defaultBranch dev
        git config --global user.email "setup-project--create@example.com"
        git config --global user.name "CI CD Setup Project"
        
        REPO_URL="https://github.com/sixfeetup/scaf-fullstack-temlate.git"
        $HOME/.local/bin/scaf myproject --defaults --vcs-ref main $REPO_URL

    - name: Push Generated Project to GitHub
      run: |
        cd myproject
        git init
        git remote add origin https://x-access-token:${{ secrets.SIXPACK_PAT }}@github.com/sixfeetup/sixpack-test.git
        git fetch origin

        BRANCH="test-scaf"

        if git ls-remote --heads origin $BRANCH | grep -q "$BRANCH"; then
          echo "Branch '$BRANCH' exists. Checking out..."
          git checkout $BRANCH
        else
          echo "Branch '$BRANCH' does not exist. Creating..."
          git checkout -b $BRANCH
        fi

        git add .
        git commit -m "Initial commit with scaf full stack template"
        git push -u origin $BRANCH --force

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Check latest workflow status
      run: |
        echo "Checking workflow run status for '$BRANCH' branch..."

        while true; do
          response=$(curl -s -H "Authorization: token ${{ secrets.SIXPACK_PAT }}" \
            https://api.github.com/repos/sixfeetup/sixpack-test/actions/runs?branch=$BRANCH&per_page=1)

          status=$(echo "$response" | jq -r '.workflow_runs[0].status')
          conclusion=$(echo "$response" | jq -r '.workflow_runs[0].conclusion')

          if [[ "$status" != "queued" && "$status" != "in_progress" ]]; then
            break
          fi

          echo "Workflow is still running. Retrying in 1 minute..."
          sleep 60
        done

        if [[ "$conclusion" != "success" ]]; then
          echo "❌ Latest workflow on '$BRANCH' branch failed!"
          exit 1
        fi

        echo "✅ Workflow completed successfully!"

